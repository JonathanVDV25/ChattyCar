### connecter utilisateur jonathan@gmail.com
POST http://localhost:8080/auth
Content-Type: application/json

{
  "email": "jonathan@gmail.com",
  "password": "notsaying"
}

> {%client.global.set("jonathanToken", response.body)%}

### Connecter utilisateur avec champ manquant  -> Erreur 400
POST http://localhost:8080/auth
Content-Type: application/json

{
  "email": "test@gmail.com"
}

### Connecter utilisateur avec champ manquant  -> Erreur 400
POST http://localhost:8080/auth
Content-Type: application/json

{
  "password": "notsaying"
}

### Connecter utilisateur avec mauvais mdp  -> Erreur 401
POST http://localhost:8080/auth
Content-Type: application/json

{
  "email": "jonathan@gmail.com",
  "password": "notsaying2"
}


### créer un utilisateur
POST http://localhost:8080/users
Content-Type: application/json

{
  "email" : "jonathan@gmail.com",
  "firstname" : "Jonathan",
  "lastname" : "Van de Vyver",
  "password" : "notsaying"
}

### créer un deuxième utilisateur
POST http://localhost:8080/users
Content-Type: application/json

{
  "email" : "jonathan1@gmail.com",
  "firstname" : "Jonathan",
  "lastname" : "Van de Vyver",
  "password" : "notsaying"
}

### connecter utilisateur jonathan1@gmail.com
POST http://localhost:8080/auth
Content-Type: application/json

{
  "email": "jonathan1@gmail.com",
  "password": "notsaying"
}

> {%client.global.set("jonathan1Token", response.body)%}


### Trouver un utilisateur sur base de son email
GET http://localhost:8080/users?email=jonathan@gmail.com

### Trouver un utilisateur sur base d'un email inexistant ->  Erreur 404
GET http://localhost:8080/users?email=jonathan32@gmail.com


### Modifier mdp d'un user
PUT http://localhost:8080/users
Content-Type: application/json
Authorization: {{jonathanToken}}

{
  "email" : "jonathan@gmail.com",
  "password": "notsaying2"
}

### Modifier mdp d'un user avec des credentials incorrect -> Erreur 400
PUT http://localhost:8080/users
Content-Type: application/json
Authorization: {{jonathanToken}}

{
  "email" : "jonathan@gmail.com"
}

### Modifier mdp d'un user avec authentification qui manque -> Erreur 401
PUT http://localhost:8080/users
Content-Type: application/json
Authorization: {{notKnownToken}}

{
  "email" : "jonathan@gmail.com",
  "password": "notsaying2"
}

### Modifier mdp d'un user avec un token différent du compte qu'on veut modifier -> Erreur 403
PUT http://localhost:8080/users
Content-Type: application/json
Authorization: {{jonathan1Token}}

{
  "email" : "jonathan@gmail.com",
  "password": "notsaying2"
}

### Modifier mdp d'un user avec un email inconnu -> Erreur 404  (JSP COMMENT TESTER)
PUT http://localhost:8080/users
Content-Type: application/json
Authorization: {{null}}

{
  "email" : "null",
  "password": "notsaying2"
}


### Get user information with missing info -> Error 401
GET http://localhost:8080/users/1
Authorization: {{unknownToken}}

### Get user info with unknown user id -> Error 404
GET http://localhost:8080/users/65
Authorization: {{jonathanToken}}

### Get user info
GET http://localhost:8080/users/2
Authorization: {{jonathanToken}}


### Update user info with incorrect user -> Error 400
PUT http://localhost:8080/users/1
Content-Type: application/json
Authorization: {{jonathanToken}}

{
  "id": 1,
  "email": "jonathan@gmail.com",
  "firstname": "jojo"
}

### Update user info with missing authentication -> Error 401
PUT http://localhost:8080/users/1
Content-Type: application/json
Authorization: {{unknownToken}}

{
  "id": 1,
  "email": "jonathan@gmail.com",
  "firstname": "jojo",
  "lastname": "VDV"
}

### Update user info with token of another member email -> Error 403
PUT http://localhost:8080/users/1
Content-Type: application/json
Authorization: {{jonathan1Token}}

{
  "id": 1,
  "email": "jonathan@gmail.com",
  "firstname": "jojo",
  "lastname": "VDV"
}

### Update user info with unknown user_id -> Error 404 (IDK HOW TO VERIFY IT)
PUT http://localhost:8080/users/1
Content-Type: application/json
Authorization: {{jonathanToken}}

{
  "id": 65,
  "email": "jonathan@gmail.com",
  "firstname": "jojo",
  "lastname": "VDV"
}

### Update user info
PUT http://localhost:8080/users/1
Content-Type: application/json
Authorization: {{jonathanToken}}

{
  "id": 1,
  "email": "jonathan@gmail.com",
  "firstname": "JAQUES",
  "lastname": "VDV"
}


### Delete user with missing authentication -> Error 401
DELETE http://localhost:8080/users/1
Authorization: {{unknownToken}}

### Delete user with token of another member -> Error 403
DELETE http://localhost:8080/users/1
Authorization: {{jonathan1Token}}

### Delete user with unknown member id -> Error 404 (IDK HOW TO TEST IT)
DELETE http://localhost:8080/users/65
Authorization: {{unknownToken}}

### Delete user
DELETE http://localhost:8080/users/1
Authorization: {{jonathanToken}}


### Get trips where user is the driver with missing authentication -> Error 401
GET http://localhost:8080/users/1/driver
Authorization: {{unkownToken}}

### Get trips where user is the driver with others token -> Error 403
GET http://localhost:8080/users/1/driver
Authorization: {{jonathan1Token}}

### Get trips where user is driver but user_id is unknown  -> Error 404
GET http://localhost:8080/users/25/driver
Authorization: {{jonathanToken}}

### Get trips where user is the driver with a future departure date
GET http://localhost:8080/users/1/driver
Authorization: {{jonathanToken}}


### Get trips where user is passenger & with future departure date
GET http://localhost:8080/users/2/passenger
Authorization: {{jonathan1Token}}


### Get all notif of a user_id 2
GET http://localhost:8080/users/2/notifications
Authorization: {{jonathan1Token}}


### Delete all notif of user_id 2
DELETE http://localhost:8080/users/2/notifications
Authorization: {{jonathan1Token}}

### Create one trip
POST http://localhost:8080/trips
Content-Type: application/json
Authorization: {{jonathanToken}}

{
  "origin": {
    "latitude": 45.5,
    "longitude": 75.5
  },
  "destination": {
    "latitude": 89.9,
    "longitude": 100.2
  },
  "departure": "2022-12-27",
  "driver_id": 1,
  "available_seating": 2
}


### Get all trips from a departure Date
GET http://localhost:8080/trips?departure_date=2022-12-27

### Get all trips filtered by distance of originLat & originLon
GET http://localhost:8080/trips?originLat=50&originLon=89

### Get all trips filtered by distance of destinationLat & destinationLon
GET http://localhost:8080/trips?destinationLat=50&destinationLon=89


### Get one trip info
GET http://localhost:8080/trips/1

### get one unknown trip -> Error 404
GET http://localhost:8080/trips/500

### Delete a trip
DELETE http://localhost:8080/trips/1
Authorization: {{jonathanToken}}


### Get all passengers status
GET http://localhost:8080/trips/2/passengers
Authorization: {{jonathanToken}}


### Add passenger to trip
POST http://localhost:8080/trips/1/passengers/2
Authorization: {{jonathan1Token}}

### Get passenger status
GET http://localhost:8080/trips/1/passengers/2
Authorization: {{jonathanToken}}


### Update passenger status
PUT http://localhost:8080/trips/1/passengers/2?status=refused
Authorization: {{jonathanToken}}







### change le prenom du compte a
PUT http://localhost:8080/users
Content-Type: application/json
Authorization: {{token}}

{
  "email" : "a@a.com",
  "password": "aa"
}

### info du compte a

GET http://localhost:8080/users/4
Authorization: {{token}}

### list de trip dans laquelle le user est le conducteur

GET http://localhost:8080/users/1/driver
Authorization: {{token}}

### list de trips dans laquel le user est le passager

GET http://localhost:8080/users/1/passenger
Authorization: {{token}}

### get notif pour user

GET http://localhost:8080/users/1/notifications
Authorization: {{token}}

### status de passager

GET http://localhost:8080/trips/2/passengers/3
Authorization: {{token}}

### changer le statut de passager

POST http://localhost:8080/auth
Content-Type: application/json

{
  "email": "gregory.seront@vinci.be",
  "password": "notsaying"
}

> {%client.global.set("token", response.body)%}

### changer le status de passager

PUT http://localhost:8080/trips/2/passengers/3
Content-Type: application/json
Authorization: {{token}}

{
  "user_id": 3,
  "trip_id": 2,
  "status" : "ACCEPTED"
}

### effacer un passager dans un trip

DELETE http://localhost:8080/trips/4/passengers/3
Authorization:{{token}}


### effacer un trip

DELETE http://localhost:8080/trips/1
Authorization: {{token}}

